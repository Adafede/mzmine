
TODO list for MZmine 2.0 release


***** Optimization *****

* Reduce memory footprint

* Temporary files containing raw data could be memory-mapped (using FileChannel.map()) for better performance.

* m/z and intensity pairs in temporary files should be stored as float pairs, not double 
  (to reduce memory usage and increase reading speed)
 

***** Core modules *****

Project manager
* We need to reimplement project saving/loading using our own project file format. 
  Saving using serialization is too slow (2 hr saving a ~1 GB size project) (Sandra)

Desktop
* JTree needs support for drag&drop reordering of data files/peak lists  (Tomas)
* Bug: when retention time format is set to hh:mm:ss, it starts at 12:00:00, instead of 00:00:00

Project data files
* Project must not contain two data files with same name, otherwise project saving will fail.
  This must be checked when data files are added to the project, and also when data file is being renamed.


***** Raw data import *****

RAW file import using Thermo XCalibur DLL
* Raw file import is using too much memory. Memory is released when task is 
  finished, but importing one file may consume >500MB RAM during the process.

mzXML parsing
* MS/MS scans (<scan> elements) can be nested or not. Currently, MZmine only 
  recognizes nested version

Polarity support
* polarity attribute (+/-/?) should be added to Scan interface and import modules
  should recognize polarity

***** Raw data filtering *****

These algorithms are almost unchanged since original MZmine 1.
We should think how they can be applied to high-resolution data. 
Probably we need to improve the algorithms.
We may also consider implementing some preview mechanism, similar
to peak detection.


***** Visualizers *****

2D visualizer
* Need to set threshold for how many peaks will be annotated (Sandra)
* Color scale should be editable, similar as color scale of RT/MZ plots
* Intensity scale is now relative to the zoomed area. There should be a 
  setting to make it absolute (e.g. when comparing two files)
* Loading of data should be properly implemented as a Task. Currently 
  the task only loads Scans, but these are already in memory. 

3D visualizer
* Need to set threshold for how many peaks will be annotated
* There should be a setting for the intensity scale (e.g. when comparing
  two files)
* There should be a switch whether missing points in the grid should be
  approximated - makes sense only for continuous mode when looking in high
  detail

Peak list table
* There should be another column "fold-change", user can select which samples/parameters are compared

Scatter plot
* Scatter plot should be able to show average value from a group of samples 
  (defined by sample parameter)


TIC/XIC visualizer
* Bug: NullPointerException when TIC visualizer setup dialog is opening. (ParameterSetupDialog.java:303)

Spectrum visualizer
* Bug: opening a spectra with a non-existent scan number throws an exception  


Peak list row summary visualizer
* After changing the peak using manual picker, the row summary is not updated


***** Normalization *****

NOMIS method?


***** Identification *****

Related peaks search
* This module should perhaps be split into several modules for adduct search, 
  fragments search (using MS/MS), dimers etc. (Tomas)

Custom database search
* Bug: the identification assigned to one peak changes to another peak when
 one of the names is selected and the peak list is sorted. This selected identification 
 doesn't change its position in the list when it is sorted.


***** Data analysis *****

RT/mz plots
* Color axis needs more informative title - instead of "Logratio" it should say 
  e.g. "log2(avg peak area(file1, file2) / avg peak area (file3, file4))"
* Setup dialog should use project parameters to split samples to groups

PCA plot
* Bug: PCA plot may freeze if data contains Double.NaN


***** MZviewer *****

MZviewer needs better integration with MainWindow (window title etc.) and MainMenu.


***** Documentation *****

Write documentation for the new code
* Comments in critical parts of the code (algorithms)
* Help files
* User's manual.
