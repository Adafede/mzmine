name: PR Test Build

on:
  pull_request_target:
    branches: [ "master" ]

jobs:
  gradle_build:
    name: test and build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21.0.2'
#          cache: 'gradle'  # now done with gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

# requires two secrets just in case: the user license string and
# USER_BASE64 a Base64 encoded version of this
#      - name: Create testrunner user file
#        env:
#          TESTRUNNER_USER: ${{ secrets.TESTRUNNER_USER }}
#          USER_BASE64: ${{ secrets.USER_BASE64 }}
#        run: |
#          mkdir -p $HOME/.mzmine/users/
#          echo $HOME/.mzmine/users/
#          echo $USER_BASE64 | base64 --decode > $HOME/.mzmine/users/testrunner.mzuserstr
# another option to set env var globally
#          echo "TESTRUNNER_USER_GIT_ENV=$TESTRUNNER_USER" >> "$GITHUB_ENV"

#      in PR, without signing
#      in push to master use signed version for macOS
      - name: Execute dependency license check
#        env:
#          TESTRUNNER_USER: ${{ secrets.TESTRUNNER_USER }}
        run: ./gradlew -p mzmine-community:checkLicense --stacktrace --info --warning-mode all

      # UPLOAD ALL FILES
      - name: Upload license report
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: license_report
          path: mzmine-community/licensereport/*.json
          retention-days: 7  # store for 7 days
